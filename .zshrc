# =======================================================
#
# Initial setup file for only interactive zsh
# This file is read after .zshenv file is read.
#
# =======================================================

# ===== default autoloads =====
# U option is disable to open alias, in loading functions.

## Enable appoint color on name
autoload -Uz colors
colors
## Enable zmv command
autoload zmv
alias zmv='noglob zmv -W'
## call version check function
autoload -Uz is-at-least
## zsh editor
#autoload zed
# prediction Completion
autoload predict-on
# predict-off

# load alias
source ~/.zsh/.zrc.alias

# OS „Åî„Å®„ÅÆfunction, „Éó„É©„Ç∞„Ç§„É≥ {{{
case "${OSTYPE}" in
freebsd*|darwin*)
source ~/.zsh/.zrc.mac
    ;;
linux*)
source ~/.zsh/.zrc.linux
    ;;
cygwin*)
source ~/.zsh/.zrc.cyg
   ;;
esac
# ---- }}}


### Command Completemente{{{
# Default Completement
# fpath„ÅÆÂ§âÊõ¥„ÅØcompinit„ÇíÂÆüË°å„Åô„ÇãÂâç„Å´Ë°å„Çè„Å™„ÅÑ„Å®ÊÑèÂë≥„Åå„Å™„ÅÑ„ÅÆ„ÅßÊ≥®ÊÑèÔºÅ
autoload -U compinit; compinit

# }}}

# Ë£úÂÆåÊñπÊ≥ï„ÅÆË®≠ÂÆö ÊåáÂÆö„Åó„ÅüÈ†ÜÁï™„Å´ÂÆüË°å
### _oldlist ÂâçÂõû„ÅÆË£úÂÆåÁµêÊûú„ÇíÂÜçÂà©Áî®„Åô„Çã„ÄÇ
### _complete: fpathË£úÂÆå
### _expand: glob„ÇÑÂ§âÊï∞„ÅÆÂ±ïÈñã„ÇíË°å„ÅÜ
### _match: glob„ÇíÂ±ïÈñã„Åó„Å™„ÅÑ„ÅßÂÄôË£ú„ÅÆ‰∏ÄË¶ß„Åã„ÇâË£úÂÆå„Åô„Çã„ÄÇ
### _history: „Éí„Çπ„Éà„É™„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇÇË£úÂÆåÂÄôË£ú„Å®„Åô„Çã„ÄÇ
### _ignored: Ë£úÂÆåÂÄôË£ú„Å´„Å†„Åï„Å™„ÅÑ„Å®ÊåáÂÆö„Åó„Åü„ÇÇ„ÅÆ„ÇÇË£úÂÆåÂÄôË£ú„Å®„Åô„Çã„ÄÇ
### _approximate: ‰ºº„Å¶„ÅÑ„ÇãË£úÂÆåÂÄôË£ú„ÇÇË£úÂÆåÂÄôË£ú„Å®„Åô„Çã„ÄÇ
### _prefix: „Ç´„Éº„ÇΩ„É´‰ª•Èôç„ÇíÁÑ°Ë¶ñ„Åó„Å¶„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆ„Åæ„Åß„ÅßË£úÂÆå„Åô„Çã„ÄÇ
zstyle ':completion:*' completer \
    _oldlist _complete _expand _match _history _ignored _approximate _prefix

## sudoÊôÇ„Å´„ÅØsudoÁî®„ÅÆ„Éë„Çπ„ÇÇ‰Ωø„ÅÜ„ÄÇ
zstyle ':completion:sudo:*' environ PATH="$SUDO_PATH:$PATH"

#Ë£úÂÆåÂÄôË£ú„Åå„Å™„ÅÑ„Å®„Åç„ÅØ„ÄÅ„Çà„ÇäÊõñÊòßÊ§úÁ¥¢„Éë„ÉØ„Éº„ÇíÈ´ò„ÇÅ„Çã
### r:|[._-]=*: „Äå.„Äç„Äå_„Äç„Äå-„Äç„ÅÆÂâç„Å´„ÉØ„Ç§„É´„Éâ„Ç´„Éº„Éâ„Äå*„Äç„Åå„ÅÇ„Çã„ÇÇ„ÅÆ„Å®„Åó„Å¶Ë£úÂÆå„Åô„Çã„ÄÇ
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}  r:|[._-]=*'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' use-cache true

# Ë©≥Á¥∞„Å™ÊÉÖÂ†±„Çí‰Ωø„ÅÜ„ÄÇ
zstyle ':completion:*' verbose yes
# Ë£úÂÆå„É™„Çπ„Éà„Çí„Ç∞„É´„Éº„ÉóÂàÜ„Åë„Åô„Çã
zstyle ':completion:*' group-name ''
zstyle ':completion:*:default' menu select=2
zstyle ':completion:*:warnings' format 'No matches for: %d'
## via cdd formaat
zstyle ':completion:*:descriptions' format '%BCompleting%b %F{yellow}%U%d%u'
zstyle ':completion:*' list-separator '-->'
# ../ „Å™„Å©„Å®„Çø„Ç§„Éó„Åó„Åü„Å®„Åç„ÄÅÁèæÂú®„ÅÑ„Çã„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíË£úÂÆåÂÄôË£ú„Å´Âá∫„Åï„Å™„ÅÑ
zstyle ':completion:*' ignore-parents parent pwd ..

### }}}

### Set shell options{{{
# „Ç´„É¨„É≥„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„Çµ„Éñ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„Å´cd„ÅåÊ§úÁ¥¢„Åô„ÇãÂ†¥ÊâÄ
cdpath=($HOME)

setopt no_beep

setopt auto_menu
setopt auto_list

#globÂ±ïÈñã„ÅÆÊã°Âºµ(Ê≠£Ë¶èË°®Áèæ„É©„Ç§„ÇØ„Å™Ë®òÊ≥ï„Åå‰Ωø„Åà„Çã„Çà„ÅÜ„Å´„Å™„Çã)
setopt extended_glob
# Ë£úÂÆåÂÄôË£ú„É™„Çπ„Éà„ÇíÂá∫Êù•„Çã„Å†„Åë„Ç≥„É≥„Éë„ÇØ„Éà„Å´Ë°®Á§∫„Åô„Çã
setopt list_packed
setopt list_types
# =‰ª•Èôç„ÇÇË£úÂÆå„Åô„Çã(--prefix=/usr„Å™„Å©)
setopt magic_equal_subst
setopt print_eight_bit
setopt auto_cd
# stack cd history
setopt auto_pushd
setopt pushd_ignore_dups
setopt ignore_eof
# ÊòéÁ¢∫„Å´.ÊåáÂÆö„Å™„Åó„Åß.„Åã„ÇâÂßã„Åæ„Çã„Éï„Ç°„Ç§„É´Âêç„ÇíË£úÂÆå
setopt globdots
# use '#' as comment on commandloine
setopt interactive_comments
# „Ç≥„Éû„É≥„ÉâÂÆüË°åÂæå„ÅØÂè≥„Éó„É≠„É≥„Éó„Éà„ÇíÊ∂à„Åô
#setopt transient_rprompt
# Âè≥„Éó„É≠„É≥„Éó„Éà„Åå„Åã„Å∂„Å£„Åü„ÇâÊ∂à„Åô(„Éá„Éï„Ç©„É´„ÉàON„Åò„ÇÉ„Å≠ÊÑü)
setopt promptcr
# „Ç≥„Éû„É≥„Éâ„ÅÆÁµÇ‰∫Ü„Ç≥„Éº„Éâ„Åå0‰ª•Â§ñ„ÅÆÂ†¥Âêà„Å´Ë°®Á§∫
# setopt print_exit_value
# Ë©≤ÂΩì„Åô„Çã„Éñ„É¨„Éº„Çπ{}Â±ïÈñã„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅasciiÈ†Ü„Å´„ÇΩ„Éº„Éà„Åó„Å¶Â±ïÈñã„Åô„Çã
setopt brace_ccl
## Ë£úÂÆåÂÆüË°åÊôÇ„Å´„Ç®„Ç§„É™„Ç¢„Çπ„ÇíÂ±ïÈñã„Åõ„Åö„Å´„Åù„ÅÆ„Åæ„Åæ„ÅÆ„Ç≥„Éû„É≥„Éâ„Å®„Åó„Å¶„Ç®„Ç§„É™„Ç¢„Çπ„ÇíÊâ±„ÅÜ
#setopt complete_aliases # „ÅÇ„Çã„Å® g „Åß git „ÅåË£úÂÆå„Åï„Çå„Å™„Åã„Å£„Åü„Çä„Åó„Å¶„ÅÜ„Å£„Å®„Åä„Åó„ÅÑ„Å†„Åë„Å™„ÅÆ„ÅßÁÑ°Âäπ
# „Éï„Ç°„Ç§„É´Âêç„ÅÆË£úÂÆåÊôÇ„ÄÅ„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„Éû„ÉÉ„ÉÅ„Åó„Åü„Çâ/„Çí‰ªò‰∏é
setopt mark_dirs
# „Ç´„ÉÉ„Ç≥„ÅÆÂØæÂøú„Å™„Å©„ÇÇË£úÂÆå
setopt auto_param_keys
# correct slash of a end of name of dir
setopt auto_param_slash
# „Éë„Çπ„ÅÆÊúÄÂæå„ÅÆ/„ÇíÂâäÈô§„Åó„Å™„ÅÑ(ÂãùÊâã„Å´ÂâäÈô§„Åï„Çå„Çã„Å®Âõ∞„Çã„Ç±„Éº„Çπ„ÇÇ„ÅÇ„Çã„ÅÆ„Åß)
setopt noautoremoveslash
# „Éï„Ç°„Ç§„É´Âêç‰∏ÄË¶ß„ÇíÈ†ÜÊ¨°Ë°®Á§∫
setopt always_last_prompt
# Ë£úÂÆåÂÄôË£ú„É™„Çπ„Éà„ÅåÂûÇÁõ¥„Åß„ÅØ„Å™„ÅèÊ∞¥Âπ≥ÊñπÂêë„Å´‰∏¶„Å∂„Çà„ÅÜ„Å´„Å™„Çã
setopt list_rows_first
## ÊõñÊòß„Éû„ÉÉ„ÉÅ„Çà„Çä„ÇÇÊ≠£Á¢∫„Åï„ÇíÂÑ™ÂÖà„Åô„ÇãÔºü
#setopt rec_exact
# „Çπ„Éö„É´„Éü„Çπ„ÇíÊåáÊëò„Åó„Å¶Ê≠£„Åó„ÅÑ„Å®ÊÄù„Çè„Çå„Çã„Ç≥„Éû„É≥„Éâ„ÇíÂá∫„Åó„Å¶„Åè„Çå„Çã Ë®≠ÂÆö„Åó„Å™„ÅÑ
setopt no_correct
setopt no_correctall
# „Éê„ÉÉ„ÇØ„Ç∞„É©„Ç¶„É≥„Éâ„Ç∏„Éß„Éñ„ÅÆ„Çπ„Éî„Éº„Éâ„ÇíËêΩ„Å®„Åï„Å™„ÅÑ
setopt no_bg_nice
# „É≠„Ç∞„Ç¢„Ç¶„Éà„Åó„Å¶„ÇÇ„Éê„ÉÉ„ÇØ„Ç∞„É©„É≥„Éâ„Ç∏„Éß„Éñ„ÇíÊ≠¢„ÇÅ„Å™„ÅÑ
setopt no_hup
# „Ç∏„Éß„Éñ„ÅåÁµÇ‰∫Ü„Åó„Åü„Çâ„Åü„Å†„Å°„Å´Áü•„Çâ„Åõ„Çã
setopt notify
# rm * „ÇíÂÆüË°å„Åô„ÇãÂâç„Å´Á¢∫Ë™ç
setopt rm_star_wait

# }}}

# permission settings
umask 022

# Enable appoint on reserved-word in PROMPT
# ex: $UID $HOME
setopt prompt_subst

# mm?
# limit coredumpsize 0

# if there too many Completementes
export LISTMAX=0

# history settings{{{
HISTFILE=~/.zsh_histfile
# history in memory
HISTSIZE=1000000
# history in file
SAVEHIST=1000000

# disable to save hist, if it's on RootUser
if [ $UID = 0 ]; then
    unset HISTFILE
    SAVEHIST = 0
fi

setopt share_history
setopt hist_ignore_all_dups # if there are overlaps on histfile, delete the old one
setopt hist_ignore_dups # disable to save histfile, if its overlaps on just before
# ignore `history` command itselfs
setopt hist_no_store
setopt hist_reduce_blanks
# ignore command is same as old one
setopt hist_save_no_dups
## Ë£úÂÆåÊôÇ„Å´„Éí„Çπ„Éà„É™„ÇíËá™ÂãïÁöÑ„Å´Â±ïÈñã„Åô„Çã„ÄÇ
setopt hist_expand
setopt share_history
# when use zsh on multiwindow, add on a history file
setopt append_history
# append history immediately after commands finished.
setopt inc_append_history
# save Begin and End
setopt EXTENDED_HISTORY

# --- ÂÖ•ÂäõÊ∏à„Åø„ÅÆÊñáÂ≠óÂàó„Å´„Éû„ÉÉ„ÉÅ„Åó„Åü„Ç≥„Éû„É≥„Éâ„ÅÆ„Éí„Çπ„Éà„É™„ÇíË°®Á§∫„Åï„Åõ„Çã ---
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# „Éí„Çπ„Éà„É™Âëº„Å≥Âá∫„Åó„Åã„Çâ„ÄÅÂÆüË°å„Åæ„Åß„ÅÆÈñì„Å´‰∏ÄÂ∫¶Á∑®ÈõÜ„ÇíÂèØËÉΩ„Å´„Åô„Çã
setopt hist_verify

# }}}

#„ÇØ„É©„ÉÉ„ÇØ„Åï„Çå„ÅüÊôÇ„Å´Ê∞ó„Åå„Å§„Åë„ÇãÔºà„Åã„ÇÇ) #{{{
## ÂÖ®„Å¶„ÅÆ„É¶„Éº„Ç∂„ÅÆ„É≠„Ç∞„Ç§„É≥„Éª„É≠„Ç∞„Ç¢„Ç¶„Éà„ÇíÁõ£Ë¶ñ„Åô„Çã„ÄÇ
watch="all"
## „É≠„Ç∞„Ç§„É≥ÊôÇ„Å´„ÅØ„Åô„Åê„Å´Ë°®Á§∫„Åô„Çã„ÄÇ
log
#}}}

## ÂÆüË°å„Åó„Åü„Éó„É≠„Çª„Çπ„ÅÆÊ∂àË≤ªÊôÇÈñì„Åå3Áßí‰ª•‰∏ä„Åã„Åã„Å£„Åü„ÇâËá™ÂãïÁöÑ„Å´Ê∂àË≤ªÊôÇÈñì„ÅÆÁµ±Ë®àÊÉÖÂ†±„ÇíË°®Á§∫„Åô„Çã„ÄÇ
REPORTTIME=3

# spell checks on commandline
# setopt corrent

######
# key binds setting {{{
#######
### Binding key ###
# Like vim
#bindkey -v

# Like Emacs
bindkey -e

# Ctrl-u delete line before cursor
bindkey '^U' backward-kill-line
# Ctrl-u delete word before cursor
bindkey "^[h" backward-kill-word
bindkey "^[u" undo
bindkey "^[r" redo

# }}}

# ------------------- load plugins ---------------- {{{
# -- zsh syntax highlight ---
source ~/.zsh/modules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# -- cdd --
source ~/.zsh/modules/cdd/cdd
# -- zaw.zsh --------
source ~/.zsh/modules/zaw/zaw.zsh

# -- notify if command takes long time
source ~/.zsh/functions/notify_wlonger.zsh
# }}}
# -------------------- settings for plugins ------------ {{{
# --- cdd ---
typeset -ga chpwd_functions
chpwd_functions+=_cdd_chpwd

# }}}
# --- zaw --- {{{
# common settings
zstyle ':filter-select' case-insensitive yes

bindkey '^g' zaw
bindkey '^g^h' zaw-history
bindkey '^ggf' zaw-git-files
# zaw-src-gitdir {{{
# via: http://d.hatena.ne.jp/syohex/20120624/1340550154
# zaw source for git command
function zaw-src-gitdir () {
    _dir=$(git rev-parse --show-cdup 2>/dev/null)
    if [ $? -eq 0 ]
    then
        candidates=( $(git ls-files ${_dir} | perl -MFile::Basename -nle \
                       '$a{dirname $_}++; END{delete $a{"."}; print for sort keys %a}') )
    fi
    actions=("zaw-src-gitdir-cd")
    act_descriptions=("change directory in git repos")
}
function zaw-src-gitdir-cd () {
    BUFFER="cd $1"
    zle accept-line
}
zaw-register-src -n gitdir zaw-src-gitdir
bindkey '^ggd' zaw-gitdir
# }}}
## zaw-src-cdd {{{
# http://blog.kentarok.org/entry/2012/03/24/221522
if (( $+functions[cdd] )); then
    function zaw-src-cdd () {
        if [ -r "$CDD_PWD_FILE" ]; then
            for window in `cat $CDD_PWD_FILE | sed '/^$/d'`; do
                candidates+=("${window}")
            done

            actions=(zaw-src-cdd-cd)
            act_descriptions=("cdd for zaw")
        fi
    }
    function zaw-src-cdd-cd () {
        BUFFER="cd `echo $1 | cut -d ':' -f 2`"
        zle accept-line
    }
    zaw-register-src -n cdd zaw-src-cdd
fi
bindkey '^gcd' zaw-cdd
# }}}
# ======= }}}

# move dotfiles in Dropbox{{{
function dotf {
    if [ $# != 0 ]; then # ÂºïÊï∞„ÅåÂ≠òÂú®„Åô„Çã„Å™„Çâ„Å∞
        cd ~/Dropbox/dotfiles
        vim $1
    else
        cd ~/Dropbox/dotfiles
    fi
}
#  }}}


# google search{{{
function google() {
  local str opt
  if [ $# != 0 ]; then
    for i in $*; do
      str="$str+$i"
    done
    str=`echo $str | sed 's/^\+//'`
    opt='search?num=50&hl=ja&lr=lang_ja'
    opt="${opt}&q=${str}"
  fi
  w3m http://www.google.co.jp/$opt
}
# }}}

#show buffer stack{{{
show_buffer_stack(){
    POSTDISPLAY="
stacked: $LBUFFER"
    zle push-line-or-edit
}
zle -N show_buffer_stack
# ^[ = ESC
bindkey "q" show_buffer_stack

# }}}

function cdup() {
    echo
    cd ..
    zle reset-prompt
}
zle -N cdup
# Ctrl+] „Å™„Çì„Åã„Å®„Åã„Å∂„Å£„Åü„ÇâËÄÉ„Åà„Çã
bindkey '^]' cdup

# }}}

# ÂÖ®Â±•Ê≠¥„ÅÆÊ§úÁ¥¢
function history-all { history -E 1 }


#Ë™≠„ÅøËæº„ÅøÈÉ®ÂàÜ„ÅØÂêÑOS„Åî„Å®„ÅÆ„Ç¢„É¨ÈÉ®ÂàÜ
# }}}

# --------
# complete sheet{{{
# ------------------
compdef _sheets sheet
function _sheets {
    local -a cmds
    _files -W ~/.sheets/ -P '~/.sheets/'

    cmds=('list' 'edit' 'copy')
    _describe -t commands "subcommand" cmds

    return 1;
}
# }}}

# utils{{{
mkcd() {mkdir -p "$@" && cd "$*[-1]"}
mktmp() {mkdir `date +"%Y%m%d_%H%M%S"`}

showroot() { `git rev-parse --git-dir |sed -e "s/[^\/]*$//g"` }

DELI_ST_LT="%{${fg[green]}%}<%{${fg[reset_color]}%}"
DELI_ST_GT="%{${fg[green]}%}>%{${fg[reset_color]}%}"

CR_cyan="%{${fg[cyan]}%}"

# virtualenv„Çí‰Ωø„Å£„Å¶„ÅÑ„Çå„Å∞„ÄÅ‰Ωø„Å£„Å¶„ÅÑ„Çãsandbox„ÅÆÊÉÖÂ†±„ÇíÂá∫„Åô
function put_virtualenv_info {
    [ $VIRTUAL_ENV ] && echo "${DELI_ST_LT}%{${fg[blue]}%}venv: %{${fg[cyan]}%}`basename $VIRTUAL_ENV` $DELI_ST_GT"
}

# rbenv„Åß„Ç¢„ÇØ„ÉÅ„Åó„Å¶„ÅÑ„ÇãRuby„ÅÆversion„ÇíË°®Á§∫„Åô„Çã
function rbenv_version() {
    if [ -n "$RBENV_ROOT" ]; then
        _ver="$CR_cyan`rbenv version | sed -e "s/\s(.\+$//g"`"
        echo "${DELI_ST_LT}%{${fg[blue]}%}rbenv: $_ver ${DELI_ST_GT}"
    else
        echo ""
    fi
}

# -------------- load prompt ---------------- {{{
source ~/.zsh/themes/hachibee.zsh-theme

# home„Å´Ëá™ÂàÜ„ÅßÂÆöÁæ©„Åó„ÅüLSCOLOR„Åå„ÅÇ„Çå„Å∞„ÄÅ„Åù„Çå„Åß‰∏äÊõ∏„Åç„Åô„Çã
if [ -f ~/.dir_colors ]; then
    echo 'use local .dir_colors'
    eval `dircolors ~/.dir_colors -b`
else
    source ~/.zsh/themes/lscolors.default
fi
# }}}

