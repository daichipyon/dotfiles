[[plugins]]
repository = 'Shougo/neobundle.vim'
fetch = 1
base = '~/.vim'



[[plugins]]
repository = 'Shougo/vimproc.vim'

    [plugins.build]
    windows = 'tools\\update-dll-mingw'
    cygwin = 'make -f make_cygwin.mak'
    mac = 'make -f make_mac.mak'
    unix = 'make -f make_unix.mak'

[[plugins]]
repository = 'editorconfig/editorconfig-vim'

[[plugins]]
repository = 'Shougo/neomru.vim'

[[plugins]]
repository = 'Shougo/neco-syntax'
on_i = 1

[[plugins]]
repository = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repository = 'Shougo/neosnippet'
on_map = '<Plug>(neosnippet_'
on_cmd = 'NeoSnippetClearMarkers'
on_func = 'neosnippet'

[[plugins]]
repository = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repository = 'Shougo/vimshell'
on_cmd = ['VimShellPop', 'VimShell']

[[plugins]]
repository = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
on_map = ['nxo', '<Plug>(quickrun)', '<Plug>(quickrun-op)']

[[plugins]]
repository = 'airblade/vim-rooter'
on_map = ['<Plug>RooterChangeToRootDirectory']
on_cmd = ['Rooter']

# Git {{{
[[plugins]]
repository = 'lambdalisue/gina.vim'
on_i = 1

[[plugins]]
repository = 'rhysd/committia.vim'

[[plugins]]
repository = 'rhysd/github-complete.vim'
on_ft = ['markdown', 'gitcommit']
# }}}

[[plugins]]
# improved from 'jceb/vim-hier'
repository = 'cohama/vim-hier'

[[plugins]]
repository = 'dannyob/quickfixstatus'

[[plugins]]
repository = 'majutsushi/tagbar'
on_cmd = ['Tagbar', 'TagbarToggle']

[[plugins]]
repository = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repository = 'hachibeeDI/smartinput-patterns'
depends = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repository = 'kana/vim-smartchr'
on_func = 'smartchr'

[[plugins]]
repository = 'goldfeld/vim-seek'

[[plugins]]
repository = 'sjl/gundo.vim'
on_cmd = ['GundoToggle']

[[plugins]]
repository = 'tpope/vim-classpath'
on_ft = ['scala', 'clojure', 'java']

[[plugins]]
repository = 'Yggdroot/indentLine'

[[plugins]]
repository = 'vim-scripts/IndentAnything'
on_ft = ['html', 'xhtml', 'htmldjango', 'play2-html']

[[plugins]]
repository = 'ujihisa/neco-look'

[[plugins]]
repository = 'itchyny/lightline.vim'

[[plugins]]
repository = 'LeafCage/foldCC'
on_func = ['FoldCCtext']

[[plugins]]
repository = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repository = 'andviro/flake8-vim'
on_ft = 'python'

[[plugins]]
repository = 'Glench/Vim-Jinja2-Syntax'
on_ft = ['html', 'jinja']

[[plugins]]
repository = 'hachibeeDI/python_hl_lvar.vim'
on_ft = 'python'

[[plugins]]
repository = 'jmcantrell/vim-virtualenv'
on_ft = 'python'
# {'name': 'VirtualEnvActivate', 'complete': 'customlist,virtualenv#names'},
on_cmd = [
    'VirtualEnvDeactivate',
    'VirtualEnvList',
    'VirtualEnvActivate',
]
disabled = '!has("python")'

[[plugins]]
repository = 'heavenshell/vim-misspell'
on_func = 'misspell'
on_cmd = ['Misspell']

[[plugins]]
repository = 'mattn/webapi-vim'

[[plugins]]
repository = 't9md/vim-quickhl'



[[plugins]]
repository = 'godlygeek/tabular'


# Colorshema {{{
[[plugins]]
repository = 'vim-scripts/Colour-Sampler-Pack'

[[plugins]]
repository = 'dracula/vim'

[[plugins]]
repository = 'lu-ren/SerialExperimentsLain'

[[plugins]]
repository = 'altercation/vim-colors-solarized'
# }}}

[[plugins]]
repository = 'sudo.vim'

[[plugins]]
repository = 'kana/vim-metarw'

# JS {{{

[[plugins]]
repository = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
# Yet Another syntax. not contains indent
repository = 'othree/yajs.vim'
on_ft = ['javascript', 'jsx', 'javascript.jsx']

[[plugins]]
# add proposal syntax e.g. async await
repository = 'othree/es.next.syntax.vim'
on_ft = ['javascript', 'jsx', 'javascript.jsx']

[[plugins]]
repository = 'othree/javascript-libraries-syntax.vim'
on_ft = ['html', 'xhtml', 'jinja', 'coffee', 'javascript', 'jsx', 'javascript.jsx', 'typescript']

[[plugins]]
repository = 'isRuslan/vim-es6'
on_ft = ['javascript', 'javascript.jsx', 'typescript', 'html']

[[plugins]]
repository = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
# just add jsx syntax so I need base syntax plugin that's yajs
repository = 'mxw/vim-jsx'
on_ft = ['javascript', 'jsx', 'javascript.jsx']
# }}}

[[plugins]]
repository = 'cespare/vim-toml'
on_ft = 'toml'

# Ruby {{{

[[plugins]]
repository = 'ruby-matchit'
on_ft = ['ruby', 'eruby', 'haml']

[[plugins]]
repository = 'skwp/vim-rspec'
on_ft = ['ruby', 'eruby', 'haml']

[[plugins]]
repository = 'tpope/vim-rails'
on_ft = ['ruby']
# }}}

[[plugins]]
repository = 'fatih/vim-go'
on_ft = 'go'

# -- markup {{{
[[plugins]]
repository = 'mattn/emmet-vim'
on_ft = ['html', 'xhtml', 'htmldjango', 'play2-html',  'eruby', 'css', 'sass', 'scss',  'stylus', 'jinja', 'jsx', 'javascript.jsx']


[[plugins]]
repository = 'othree/html5.vim'
on_ft = ['html', 'xhtml', 'htmldjango', 'play2-html',  'eruby', 'jinja']

[[plugins]]
repository = 'hail2u/vim-css3-syntax'
on_ft = ['css', 'scss', 'sass', 'stylus']

[[plugins]]
repository = 'groenewege/vim-less'
on_ft = ['less']

[[plugins]]
repository = 'wavded/vim-stylus'
on_ft = ['stylus']
# }}}

[[plugins]]
repository = 'junegunn/vim-easy-align'

[[plugins]]
repository = 'kien/rainbow_parentheses.vim'
on_cmd = ['RainbowParenthesesToggle', 'RainbowParenthesesLoadRound', 'RainbowParenthesesLoadBraces', 'RainbowParenthesesActivate']

[[plugins]]
repository = 'osyo-manga/vim-watchdogs'
depends = 'osyo-manga/shabadou.vim'
on_cmd = ['WatchdogsRun', 'WatchdogsRunSilent', 'QuickRun']
on_map = ['nxo', '<Plug>(quickrun)']

[[plugins]]
repository = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList', 'MemoGrep']

# may have an issue with clipboard=unamed ?
# [[plugins]]
# repository = 'LeafCage/yankround.vim'
# on_cmd = ['<Plug>(yankround-']

[[plugins]]
repository = 'LeafCage/vimhelpgenerator'
on_ft = 'vim'

[[plugins]]
repository = 'glidenote/memolist.vim'

# clan {{{
[[plugins]]
repository = 'vim-jp/cpp-vim'
on_ft = 'cpp'

[[plugins]]
# git submodule add git://github.com/beyondmarc/opengl.vim.git bundle/syntax_opengl
repository = 'Rip-Rip/clang_complete'
on_ft = ['c', 'cpp', 'objc', 'objcpp']

[[plugins]]
repository = 'toyamarinyon/vim-swift'
on_ft = 'swift'
# }}}

# operaor user {{{
[[plugins]]
repository = 'kana/vim-operator-replace'
depends = ['kana/vim-operator-user']
on_map = ['<Plug>(operator-replace)']

[[plugins]]
repository = 'emonkak/vim-operator-comment'
depends = ['kana/vim-operator-user']
on_map = ['<Plug>(operator-uncomment)', '<Plug>(operator-comment']

[[plugins]]
repository = 'rhysd/vim-operator-surround'
depends = ['kana/vim-operator-user', 'osyo-manga/vim-textobj-multiblock', 'thinca/vim-textobj-between']
on_map = ['<Plug>(operator-surround-']

[[plugins]]
repository = 'hachibeeDI/vim-operator-autopep8'
depends = ['kana/vim-operator-user', 'andviro/flake8-vim']
on_ft = ['python']
# }}}


# textobj-user {{{
[[plugins]]
repository = 'kana/vim-textobj-user'
[[plugins]]
repository = 'kana/vim-textobj-indent'
[[plugins]]
repository = 'kana/vim-textobj-entire'
[[plugins]]
repository = 'kana/vim-textobj-jabraces'

[[plugins]]
repository = 'osyo-manga/vim-textobj-multiblock'
depends = ['kana/vim-textobj-user']
on_map = ['<Plug>(textobj-multiblock-a)', '<Plug>(textobj-multiblock-i)']

[[plugins]]
repository = 'thinca/vim-textobj-between'
depends = ['kana/vim-textobj-user']
on_map = ['<Plug>(textobj-between-a)', '<Plug>(textobj-between-i)']

[[plugins]]
repository = 'bps/vim-textobj-python'
depends = ['kana/vim-textobj-user']
mappings = ['<Plug>(textobj-python-function']
# }}}

[[plugins]]
repository = 'kana/vim-smartword'
on_map = '<Plug>(smartword-'

[[plugins]]
repository = 'kana/vim-smarttill'
on_map = ['<Plug>(smarttill-']

[[plugins]]
repository = 'koron/codic-vim'
on_cmd = ['Codic']
on_func = 'codic'
on_map = ['<Plug>(operator-codic)']

[[plugins]]
repository = 'hachibeeDI/vim-operator-codic'
depends = ['koron/codic-vim', 'kana/vim-operator-user']
on_map = '<Plug>(operator-codic)'
